### ------------------- USUARIOS ------------------ ###
### Obtener todos los usuarios
GET http://localhost:3000/users

### Crear usuario
POST http://localhost:3000/users
Content-Type: application/json

{
  "email": "user@gmail.com",
  "password": "123456",
  "firstName": "User",
  "lastName": "Test"
}


### ------------------- EQUIPOS ------------------ ###
### Obtener todos los equipos
GET http://localhost:3000/teams

### Crear equipo
POST http://localhost:3000/teams
Content-Type: application/json

{
  "name": "Nombre del equipo",
  "description": "Descripción del equipo",
  "ownerId": 1
}

### Actualizar equipo
PATCH http://localhost:3000/teams/1
Content-Type: application/json

{
  "name": "Nombre del equipo actualizado",
  "description": "Descripción del equipo actualizada"
}

### ------------------- TAREAS ------------------ ###
### Obtener todas las tareas
GET http://localhost:3000/tasks?teamId=1

### Crear tarea
POST http://localhost:3000/tasks
Content-Type: application/json

{
  "title": "Nueva tarea",
  "description": "Descripción de la tarea",
  "teamId": 1,
  "createdById": 1,
  "assignedToId": 1,
  "priority": "media",
  "dueDate": "2025-09-10"
}

### Actualizar estado de tarea
PUT http://localhost:3000/tasks/1/status
Content-Type: application/json

{
  "status": "finalizada"
}


### ------------------- COMENTARIOS ------------------ ###
### Crear comentario
POST http://localhost:3000/comments
Content-Type: application/json

{
  "content": "Este es un comentario de la tarea",
  "taskId": 1,
  "authorId": 1
}

### Obtener todos los comentarios
GET http://localhost:3000/comments

### Obtener comentarios de una tarea específica
GET http://localhost:3000/comments/task/1



### ------------------- EQUIPOS/USUARIOS ------------------ ###
### Agregar usuario a equipo
POST http://localhost:3000/memberships
Content-Type: application/json

{
  "userId": 1,
  "teamId": 1,
  "role": "miembro"
}

### Obtener miembros de un equipo
GET http://localhost:3000/memberships/team/1

### Obtener equipos de un usuario
GET http://localhost:3000/memberships/user/1



### ------------------- Pruebas de negocio ------------------ ###
###------------------ Actualización de tareas ----------------- ###
### Intentar actualizar título de tarea (debería fallar). Rta esperada 400 bad request
PATCH http://localhost:3000/tasks/1
Content-Type: application/json

{
"title": "Este título no debería guardarse"
}

### Pasar estado a finalizada (deberia ser valido). Rta esperada 200 ok
PATCH http://localhost:3000/tasks/2
Content-Type: application/json

{
"status": "finalizada"
}

### Pasar de en_curso a pendiente (deberia fallar). Rta esperada 400 bad request
PATCH http://localhost:3000/tasks/2
Content-Type: application/json

{
"status": "pendiente"
}


###------------------ Fecha limites pasadas -----------------###
### Intentar crear tarea con fecha límite en el pasado. Rta esperada 400 bad request
POST http://localhost:3000/tasks
Content-Type: application/json

{
"title": "Tarea con fecha pasada",
"teamId": 1,
"createdById": 1,
"dueDate": "2020-01-01"
}

### Actualizar la Tarea 2 con fecha en el pasado (deberia fallar). Rta esperada 400 bad request
PATCH http://localhost:3000/tasks/2
Content-Type: application/json

{
"dueDate": "2020-01-01"
}


### Crear una tarea con fecha en el futuro. Debe funcionar, rta esperada 201 Created con los datos de la nueva tarea.
POST http://localhost:3000/tasks
Content-Type: application/json

{
"title": "Planificar el despliegue",
"teamId": 1,
"createdById": 1,
"dueDate": "2030-12-31"
}

###------------------ Borrado de equipos -----------------###
### Fallo al intentar borrar equipo con tareas activas. Rta esperada 400 bad request
DELETE http://localhost:3000/teams/1
